//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StatsSA.eRecruitment.Manager
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    using StatsSA.eRecruitment.Entities;

    public partial class eRecruitmentEntities : DbContext
    {
        public eRecruitmentEntities()
            : base("name=eRecruitmentEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ApplicantAttachment> ApplicantAttachments { get; set; }
        public virtual DbSet<ApplicantContactDetail> ApplicantContactDetails { get; set; }
        public virtual DbSet<ApplicantDeclaration> ApplicantDeclarations { get; set; }
        public virtual DbSet<ApplicantExperience> ApplicantExperiences { get; set; }
        public virtual DbSet<ApplicantLangProficiency> ApplicantLangProficiencies { get; set; }
        public virtual DbSet<ApplicantPubServProhibition> ApplicantPubServProhibitions { get; set; }
        public virtual DbSet<ApplicantReference> ApplicantReferences { get; set; }
        public virtual DbSet<ApplicationRequirement> ApplicationRequirements { get; set; }
        public virtual DbSet<Application> Applications { get; set; }
        public virtual DbSet<ApplicationStatus> ApplicationStatuses { get; set; }
        public virtual DbSet<ClientRole> ClientRoles { get; set; }
        public virtual DbSet<Client> Clients { get; set; }
        public virtual DbSet<ContactMethod> ContactMethods { get; set; }
        public virtual DbSet<DocumentType> DocumentTypes { get; set; }
        public virtual DbSet<Gender> Genders { get; set; }
        public virtual DbSet<HRRole> HRRoles { get; set; }
        public virtual DbSet<HRUserRole> HRUserRoles { get; set; }
        public virtual DbSet<HRUser> HRUsers { get; set; }
        public virtual DbSet<LanguageProficiency> LanguageProficiencies { get; set; }
        public virtual DbSet<Language> Languages { get; set; }
        public virtual DbSet<QualificationType> QualificationTypes { get; set; }
        public virtual DbSet<Race> Races { get; set; }
        public virtual DbSet<RefreshToken> RefreshTokens { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<UserClientRole> UserClientRoles { get; set; }
        public virtual DbSet<UserClient> UserClients { get; set; }
        public virtual DbSet<VacancyStatus> VacancyStatuses { get; set; }
        public virtual DbSet<VerApplicantAttachment> VerApplicantAttachments { get; set; }
        public virtual DbSet<VerApplicantContactDetail> VerApplicantContactDetails { get; set; }
        public virtual DbSet<VerApplicantDeclaration> VerApplicantDeclarations { get; set; }
        public virtual DbSet<VerApplicantExperience> VerApplicantExperiences { get; set; }
        public virtual DbSet<VerApplicantLangProficiency> VerApplicantLangProficiencies { get; set; }
        public virtual DbSet<VerApplicantProfile> VerApplicantProfiles { get; set; }
        public virtual DbSet<VerApplicantPubServProhibition> VerApplicantPubServProhibitions { get; set; }
        public virtual DbSet<VerApplicantReference> VerApplicantReferences { get; set; }
        public virtual DbSet<ApplicantProfile> ApplicantProfiles { get; set; }
        public virtual DbSet<PasswordRequestStatus> PasswordRequestStatuses { get; set; }
        public virtual DbSet<PasswordResetRequest> PasswordResetRequests { get; set; }
        public virtual DbSet<Salary> Salaries { get; set; }
        public virtual DbSet<Vacancy> Vacancies { get; set; }
        public virtual DbSet<Institution> Institutions { get; set; }
        public virtual DbSet<ApplicantQualification> ApplicantQualifications { get; set; }
        public virtual DbSet<VerApplicantQualification> VerApplicantQualifications { get; set; }
        public virtual DbSet<Programme> Programmes { get; set; }
        public virtual DbSet<AnswersGenericQuestion> AnswersGenericQuestions { get; set; }
        public virtual DbSet<AnswersSpecificQuestion> AnswersSpecificQuestions { get; set; }
        public virtual DbSet<Attachment> Attachments { get; set; }
        public virtual DbSet<GenericQuestion> GenericQuestions { get; set; }
        public virtual DbSet<NewApplicationRequirement> NewApplicationRequirements { get; set; }
        public virtual DbSet<SpecificQuestion> SpecificQuestions { get; set; }
        public virtual DbSet<VerAttachment> VerAttachments { get; set; }
        public virtual DbSet<ListOfApplicationsNew> ListOfApplicationsNews { get; set; }
        public virtual DbSet<ViewApplication> ViewApplications { get; set; }
        public virtual DbSet<Requirement> Requirements { get; set; }
        public virtual DbSet<AnswersThreshold> AnswersThresholds { get; set; }
        public virtual DbSet<VerifyEmail> VerifyEmails { get; set; }
        public virtual DbSet<VerifyEmailRequestStatu> VerifyEmailRequestStatus { get; set; }
        public virtual DbSet<ListOfApplication> ListOfApplications { get; set; }
        public virtual DbSet<viewApplicantQuestionAnswer> viewApplicantQuestionAnswers { get; set; }
        public virtual DbSet<HiringManagersVacancyAccess> HiringManagersVacancyAccesses { get; set; }
        public virtual DbSet<RequestAllApplication> RequestAllApplications { get; set; }
        public virtual DbSet<User> Users { get; set; }
    
        public virtual int PrepareDataBaseForTesting()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrepareDataBaseForTesting");
        }
    
        public virtual int PrepareDataBaseForTesting1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrepareDataBaseForTesting1");
        }
    }
}
